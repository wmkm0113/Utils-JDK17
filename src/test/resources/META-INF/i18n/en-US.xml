<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
    <comment>Utilities Package Test English (United States) i18n Message Resource</comment>
    <entry key="Execute_Begin_Test">Starting execute class {0} method: {1}</entry>
    <entry key="Execute_End_Test">execute class {0} method: {1} finished</entry>
    <entry key="Nano_Random">Generated NanoID: {0}</entry><!-- "Nano random: {}" -->
    <entry key="Nano_Reconfigure_Random">Generated reconfigured NanoID: {0}</entry><!-- "Nano reconfigure random: {}" -->
    <entry key="Snowflake_Random">Generate snowflake ID: {0}</entry><!-- "Snowflake random: {}" -->
    <entry key="Snowflake_Reconfigure_Random">Generate reconfigured snowflake ID：{0}</entry><!-- "Snowflake reconfigure random: {}" -->
    <entry key="UUID_Random">UUID version {0}, generated ID: {1}</entry><!-- "Snowflake reconfigure random: {}" -->
    <entry key="Mail_Subject">Test Subject</entry><!-- "Test mail" -->
    <entry key="Mail_Content">Test Content</entry><!-- "Test mail content" -->
    <entry key="Init_Secure_Factory">Initialize secure factory result: {0}</entry><!-- "Initialize SecureFactory result: {}" -->
    <entry key="Mail_Generate_Config_Info">Generated e-mail configure information: {0}</entry><!-- "Config: {}" -->
    <entry key="Mail_Parse_Config_Info">Parse and verified e-mail configure information: {0}</entry><!-- "Config: {}" -->
    <entry key="Mail_Count">Mail count: {0}</entry><!-- "Mail count: {}" -->
    <entry key="Mail_Sent_Result">Send test mail result: {0}</entry><!-- "Send result: {}" -->
    <entry key="Mail_Info_UID">E-Mail UID: {0}</entry><!-- "UID: {}" -->
    <entry key="Mail_Info_Title">E-Mail subject: {0}</entry><!-- "UID: {}" -->
    <entry key="Mail_Info_Content">E-Mail content: {0}</entry><!-- "UID: {}" -->
    <entry key="Mail_Flag_Read">Set e-mail read status result: {0}</entry><!-- "UID: {}" -->
    <entry key="Mail_Flag_UnRead">Set e-mail unread status result: {0}</entry><!-- "UID: {}" -->
    <entry key="Mail_Flag_Reply">Set e-mail answer status result: {0}</entry><!-- "UID: {}" -->
    <entry key="Mail_Flag_Flag">Set e-mail flag status result: {0}</entry><!-- "UID: {}" -->
    <entry key="Mail_Flag_UnFlag">Set e-mail unflag status result: {0}</entry><!-- "UID: {}" -->
    <entry key="Mail_Flag_Delete">Set e-mail delete status result: {0}</entry><!-- "UID: {}" -->
    <entry key="Mail_Recovery">Recovery deleted e-mail UID: {0} result: {1}</entry><!-- "Recovery mail uid {} result: {}" -->
    <entry key="Mail_Drop">Drop e-mail UID: {0} result: {1}</entry><!-- "Drop mail uid {} result: {}" -->
    <entry key="Inbox_Count">Inbox mail count: {0}</entry><!-- "Mail count: {}" -->
    <entry key="Spam_Count">Spam mail count: {0}</entry><!-- "Mail count: {}" -->
    <entry key="Drafts_Count">Drafts mail count: {0}</entry><!-- "Mail count: {}" -->
    <entry key="Sent_Count">Sent mail count: {0}</entry><!-- "Mail count: {}" -->
    <entry key="Trash">Trash mail count: {0}</entry><!-- "Mail count: {}" -->
    <entry key="OTP_Random_Key">Generated random key: {0}</entry><!-- "Generate random key: {}" -->
    <entry key="OTP_Random_Key_Length">Generated size: {0} random key: {1}</entry><!-- "Generate size {} random key: {}" -->
    <entry key="Generate_Result_HOTP">Generated HOTP code: {0}, using algorithm: {1}</entry><!-- "Generate code key: {}" -->
    <entry key="Generate_Result_TOTP">Generated TOTP code: {0}, using algorithm: {1}</entry><!-- "Generate code key: {}" -->
    <entry key="Generate_Result_Fix_Time">Calculated fix time: {0}, random key: {1}</entry><!-- "Generate code key: {}" -->
    <entry key="Generate_Result_TOTP_Fix_Time">Generated TOTP code: {0}, using algorithm: {1}, fix time: {2}</entry><!-- "Generate code key: {}" -->
    <entry key="Generate_Result_TOTP_Config">Generated TOTP code: {0}, using algorithm: {1}, fix time: {2}, cycle count: {3}</entry><!-- "Generate code key: {}" -->
    <entry key="Crypto_Key_Length">{0} key: {1}</entry><!-- "AES128 Key: {}" -->
    <entry key="Encrypt_Result">{0}/{1}/{2} encrypt result: {3}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="Decrypt_Result">{0}/{1}/{2} decrypt result: {3}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="Certificate_Result">{0} certificate info: {3}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="Signature_Result">Random string: {0} using {1} signature result: {2}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="Verify_Result">{0} verify result: {1}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="SM2_Encrypt_Result">SM2 encrypt result: {0}, data type: {1}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="SM2_Decrypt_Result">SM2 decrypt result: {0}, data type: {1}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="CRC_Result">CRC algorithm: {0}, result: {1}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="Digits_Result">Digits algorithm: {0}, result: {1} {2}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="Hmac_Result">Hmac algorithm: {0}, key: {1}, result: {2} {3}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="Secure_Config">Parsed secure configure information: {0}</entry><!-- "Parsed config: {}" -->
    <entry key="Secure_Init_Result">Initialize secure config result: {0}</entry><!-- "Parsed config: {}" -->
    <entry key="Secure_Encrypt_Result">Secure encrypt result: {0}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="Secure_Decrypt_Result">Secure decrypt result: {0}</entry><!-- "AES/{}/{} encrypt result: {}" -->
    <entry key="Bean_Copy_Result">Copied {0} result: {1}</entry><!-- "Copied generic result: {}" -->
    <entry key="Bean_Result">{0} result: {1}</entry><!-- "Copied generic result: {}" -->
    <entry key="Certificate_Sign">Private key information of signature used, Exponent：{0}， Modulus：{1}</entry><!-- "Signature Private exponent: {}" -->
    <entry key="Certificate_Base64">Generated certificate information, using Base64 encoded: {0}</entry><!-- "Generate certificate base64 encoding: {}" -->
    <entry key="Certificate_Read">Read certificate information, using Base64 encoded: {0}</entry><!-- "Generate certificate base64 encoding: {}" -->
    <entry key="Certificate_Read_Private">Read private key information, using Base64 encoded: {0}</entry><!-- "Generate certificate base64 encoding: {}" -->
    <entry key="Certificate_Verify">Verify signature of certificate result: {0}</entry><!-- "Generate certificate base64 encoding: {}" -->
    <entry key="Certificate_Read_Private_PKCS12_Error">Read private key from PKCS12 data bytes error</entry><!-- "Generate certificate base64 encoding: {}" -->
    <entry key="Certificate_Read_x509_PKCS12_Error">Read x509 certificate from PKCS12 data bytes error</entry><!-- "Generate certificate base64 encoding: {}" -->
    <entry key="Certificate_Read_Private_File_Error">Read private key from file error</entry><!-- "Generate certificate base64 encoding: {}" -->
    <entry key="Raw_Data_Bytes">Binary data: {0}</entry><!-- "Data bytes: {}" -->
    <entry key="Request_HTTP_Method">HTTP method: {0}</entry><!-- "Data bytes: {}" -->
    <entry key="Request_Resolve_Domain">Resolve domain: {0}, IP address: {1}</entry><!-- "Data bytes: {}" -->
    <entry key="Request_Read_Certificate">Read domain: {0} SSL certificate, using Base64 encoded: {1}</entry><!-- "Data bytes: {}" -->
    <entry key="Request_Content_Length">Response content length: {0}</entry><!-- "Data bytes: {}" -->
    <entry key="Request_Content_Info">Response content length: {0}, content info: {1}</entry><!-- "Data bytes: {}" -->
    <entry key="SNMP_Init_Result">Initialize result: {0}</entry><!-- "Data bytes: {}" -->
    <entry key="SNMP_Add_Result">Add the monitor host result: {0}</entry><!-- "Data bytes: {}" -->
    <entry key="SNMP_Record_Data">Identified key: {0}, current time: {1}</entry><!-- "Data bytes: {}" -->
    <entry key="SNMP_Record_Info">Data Key: {0}, value: {1}</entry><!-- "Data bytes: {}" -->
    <entry key="System_Info">Operate system: {0}, version: {1}, username: {2}, home directory: {3}, work folder: {4}, identified key: {5}</entry><!-- "user name: {}, user home: {}, workspace: {}, identify Key: {}" -->
    <entry key="System_Java_Info">Java version: {0}, major version: {1}, Java home: {2}, tmp directory: {3}</entry><!-- "Java version: {}, major version: {}, java home: {}, tmp directory: {}" -->
    <entry key="System_Adaptor">Adaptor {0} {1} address: </entry><!-- "Adaptor {} IPv4 addresses: " -->
    <entry key="System_Adaptor_IP_Info">IP address: {0}: site local: {1}，loopback: {2}, link local: {3}</entry><!-- "Adaptor {} IPv4 addresses: " -->
</properties>