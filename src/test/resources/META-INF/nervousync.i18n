{
  "groupId": "org.nervousync",
  "bundle": "utils",
  "languages": [
    {
      "code": "en-US",
      "name": "English",
      "messages": [
        {
          "key": "Execute_Begin_Test",
          "content": "Starting execute class {0} method: {1}"
        },
        {
          "key": "Execute_End_Test",
          "content": "execute class {0} method: {1} finished"
        },
        {
          "key": "Nano_Random",
          "content": "Generated NanoID: {0}"
        },
        {
          "key": "Nano_Reconfigure_Random",
          "content": "Generated reconfigured NanoID: {0}"
        },
        {
          "key": "Snowflake_Random",
          "content": "Generate snowflake ID: {0}"
        },
        {
          "key": "Snowflake_Reconfigure_Random",
          "content": "Generate reconfigured snowflake ID：{0}"
        },
        {
          "key": "UUID_Random",
          "content": "UUID version {0}, generated ID: {1}"
        },
        {
          "key": "Mail_Subject",
          "content": "Test Subject"
        },
        {
          "key": "Mail_Content",
          "content": "Test Content"
        },
        {
          "key": "Init_Secure_Factory",
          "content": "Initialize secure factory result: {0}"
        },
        {
          "key": "Mail_Generate_Config_Info",
          "content": "Generated e-mail configure information: {0}"
        },
        {
          "key": "Mail_Parse_Config_Info",
          "content": "Parse and verified e-mail configure information: {0}"
        },
        {
          "key": "Mail_Count",
          "content": "Mail count: {0}"
        },
        {
          "key": "Mail_Sent_Result",
          "content": "Send test mail result: {0}"
        },
        {
          "key": "Mail_Info_UID",
          "content": "E-Mail UID: {0}"
        },
        {
          "key": "Mail_Info_Title",
          "content": "E-Mail subject: {0}"
        },
        {
          "key": "Mail_Info_Content",
          "content": "E-Mail content: {0}"
        },
        {
          "key": "Mail_Flag_Read",
          "content": "Set e-mail read status result: {0}"
        },
        {
          "key": "Mail_Flag_UnRead",
          "content": "Set e-mail unread status result: {0}"
        },
        {
          "key": "Mail_Flag_Reply",
          "content": "Set e-mail answer status result: {0}"
        },
        {
          "key": "Mail_Flag_Flag",
          "content": "Set e-mail flag status result: {0}"
        },
        {
          "key": "Mail_Flag_UnFlag",
          "content": "Set e-mail unflag status result: {0}"
        },
        {
          "key": "Mail_Flag_Delete",
          "content": "Set e-mail delete status result: {0}"
        },
        {
          "key": "Mail_Recovery",
          "content": "Recovery deleted e-mail UID: {0} result: {1}"
        },
        {
          "key": "Mail_Drop",
          "content": "Drop e-mail UID: {0} result: {1}"
        },
        {
          "key": "Inbox_Count",
          "content": "Inbox mail count: {0}"
        },
        {
          "key": "Spam_Count",
          "content": "Spam mail count: {0}"
        },
        {
          "key": "Drafts_Count",
          "content": "Drafts mail count: {0}"
        },
        {
          "key": "Sent_Count",
          "content": "Sent mail count: {0}"
        },
        {
          "key": "Trash",
          "content": "Trash mail count: {0}"
        },
        {
          "key": "OTP_Random_Key",
          "content": "Generated random key: {0}"
        },
        {
          "key": "OTP_Random_Key_Length",
          "content": "Generated size: {0} random key: {1}"
        },
        {
          "key": "Generate_Result_HOTP",
          "content": "Generated HOTP code: {0}, using algorithm: {1}"
        },
        {
          "key": "Generate_Result_TOTP",
          "content": "Generated TOTP code: {0}, using algorithm: {1}"
        },
        {
          "key": "Generate_Result_Fix_Time",
          "content": "Calculated fix time: {0}, random key: {1}"
        },
        {
          "key": "Generate_Result_TOTP_Fix_Time",
          "content": "Generated TOTP code: {0}, using algorithm: {1}, fix time: {2}"
        },
        {
          "key": "Generate_Result_TOTP_Config",
          "content": "Generated TOTP code: {0}, using algorithm: {1}, fix time: {2}, cycle count: {3}"
        },
        {
          "key": "Crypto_Key_Length",
          "content": "{0} key: {1}"
        },
        {
          "key": "Encrypt_Result",
          "content": "{0}/{1}/{2} encrypt result: {3}"
        },
        {
          "key": "Decrypt_Result",
          "content": "{0}/{1}/{2} decrypt result: {3}"
        },
        {
          "key": "Certificate_Result",
          "content": "{0} certificate info: {1}"
        },
        {
          "key": "Signature_Result",
          "content": "Random string: {0} using {1} signature result: {2}"
        },
        {
          "key": "Verify_Result",
          "content": "{0} verify result: {1}"
        },
        {
          "key": "SM2_Encrypt_Result",
          "content": "SM2 encrypt result: {0}, data type: {1}"
        },
        {
          "key": "SM2_Decrypt_Result",
          "content": "SM2 decrypt result: {0}, data type: {1}"
        },
        {
          "key": "CRC_Result",
          "content": "CRC algorithm: {0}, result: {1}"
        },
        {
          "key": "Digits_Result",
          "content": "Digits algorithm: {0}, result: {1} {2}"
        },
        {
          "key": "Hmac_Result",
          "content": "Hmac algorithm: {0}, key: {1}, result: {2} {3}"
        },
        {
          "key": "XML_Validate",
          "content": "XML data validate result: {0}"
        },
        {
          "key": "Secure_Config",
          "content": "Parsed secure configure information: {0}"
        },
        {
          "key": "Secure_Init_System_Result",
          "content": "System secure config result: {0}"
        },
        {
          "key": "Secure_Init_Config_Result",
          "content": "Initialize secure config result: {0}"
        },
        {
          "key": "Secure_Remove_Result",
          "content": "Remove secure config result: {0}"
        },
        {
          "key": "Secure_Encrypt_Result",
          "content": "Secure encrypt result: {0}"
        },
        {
          "key": "Secure_Decrypt_Result",
          "content": "Secure decrypt result: {0}"
        },
        {
          "key": "Secure_Register_Status",
          "content": "Secure config register status: {0}"
        },
        {
          "key": "Bean_Generate_Result",
          "content": "Generate {0} result: {1}"
        },
        {
          "key": "Bean_Copy_Result",
          "content": "Copied {0} result: {1}"
        },
        {
          "key": "Bean_Result",
          "content": "{0} result: {1}"
        },
        {
          "key": "Certificate_Sign",
          "content": "Private key information of signature used, Exponent：{0}， Modulus：{1}"
        },
        {
          "key": "Certificate_Base64",
          "content": "Generated certificate information, using Base64 encoded: {0}"
        },
        {
          "key": "Certificate_Read",
          "content": "Read certificate information, using Base64 encoded: {0}"
        },
        {
          "key": "Certificate_Read_Private",
          "content": "Read private key information, using Base64 encoded: {0}"
        },
        {
          "key": "Certificate_Verify",
          "content": "Verify signature of certificate result: {0}"
        },
        {
          "key": "Certificate_Read_Private_PKCS12_Error",
          "content": "Read private key from PKCS12 data bytes error"
        },
        {
          "key": "Certificate_Read_x509_PKCS12_Error",
          "content": "Read x509 certificate from PKCS12 data bytes error"
        },
        {
          "key": "Certificate_Read_Private_File_Error",
          "content": "Read private key from file error"
        },
        {
          "key": "Certificate_Read_PEM_Private",
          "content": "Private key information read from the PEM file, encoded using Base64: {0}"
        },
        {
          "key": "Certificate_Read_PEM_Certificate",
          "content": "X509Certificate information read from the PEM file, encoded using Base64: {0}"
        },
        {
          "key": "Certificate_Read_PEM_Private_Error",
          "content": "Error reading private key from PEM file"
        },
        {
          "key": "Certificate_Read_PEM_Certificate_Error",
          "content": "Error reading certificate from PEM file"
        },
        {
          "key": "Raw_Data_Bytes",
          "content": "Binary data: {0}"
        },
        {
          "key": "Request_HTTP_Method",
          "content": "HTTP method: {0}"
        },
        {
          "key": "Request_Resolve_Domain",
          "content": "Resolve domain: {0}, IP address: {1}"
        },
        {
          "key": "Request_Read_Certificate",
          "content": "Read domain: {0} SSL certificate, using Base64 encoded: {1}"
        },
        {
          "key": "Request_Content_Length",
          "content": "Response content length: {0}"
        },
        {
          "key": "Request_Content_Info",
          "content": "Response content length: {0}, content info: {1}"
        },
        {
          "key": "SNMP_Init_Result",
          "content": "Initialize result: {0}"
        },
        {
          "key": "SNMP_Add_Result",
          "content": "Add the monitor host result: {0}"
        },
        {
          "key": "SNMP_Record_Data",
          "content": "Identified key: {0}, current time: {1}"
        },
        {
          "key": "SNMP_Record_Info",
          "content": "Data Key: {0}, value: {1}"
        },
        {
          "key": "System_Info",
          "content": "Operate system: {0}, version: {1}, username: {2}, home directory: {3}, work folder: {4}, identified key: {5}"
        },
        {
          "key": "System_Java_Info",
          "content": "Java version: {0}, major version: {1}, Java home: {2}, tmp directory: {3}"
        },
        {
          "key": "System_Adaptor",
          "content": "Adaptor {0} {1} address: "
        },
        {
          "key": "System_Adaptor_IP_Info",
          "content": "IP address: {0}: site local: {1}，loop back: {2}, link local: {3}"
        },
        {
          "key": "Desensitization_Data",
          "content": "Desensitization data: {0}"
        },
        {
          "key": "Sensitization_Value",
          "content": "Hidden sensitive data：{0}"
        },
        {
          "key": "Office_Sheet_Exists",
          "content": "Data sheet: {0}, exists: {1}"
        },
        {
          "key": "Office_Excel_Rows_Count",
          "content": "Data sheet: {0}, rows count: {1}"
        }
      ]
    },
    {
      "code": "zh-CN",
      "name": "简体中文",
      "messages": [
        {
          "key": "Execute_Begin_Test",
          "content": "开始执行测试类 {0} 的 {1} 方法"
        },
        {
          "key": "Execute_End_Test",
          "content": "执行测试类 {0} 的 {1} 方法结束"
        },
        {
          "key": "Nano_Random",
          "content": "Nano生成随机ID：{0}"
        },
        {
          "key": "Nano_Reconfigure_Random",
          "content": "Nano重新配置后生成随机ID：{0}"
        },
        {
          "key": "Snowflake_Random",
          "content": "雪花算法生成随机ID：{0}"
        },
        {
          "key": "Snowflake_Reconfigure_Random",
          "content": "雪花算法重新配置后生成随机ID：{0}"
        },
        {
          "key": "UUID_Random",
          "content": "UUID版本：{0} 生成随机ID：{1}"
        },
        {
          "key": "Mail_Subject",
          "content": "测试邮件标题"
        },
        {
          "key": "Mail_Content",
          "content": "测试邮件正文"
        },
        {
          "key": "Init_Secure_Factory",
          "content": "初始化安全工厂结果：{0}"
        },
        {
          "key": "Mail_Generate_Config_Info",
          "content": "生成的电子邮件配置信息：{0}"
        },
        {
          "key": "Mail_Parse_Config_Info",
          "content": "解析验证后的电子邮件配置信息：{0}"
        },
        {
          "key": "Mail_Count",
          "content": "电子邮件数：{0}"
        },
        {
          "key": "Mail_Sent_Result",
          "content": "测试邮件发送成功：{0}"
        },
        {
          "key": "Mail_Info_UID",
          "content": "电子邮件UID：{0}"
        },
        {
          "key": "Mail_Info_Title",
          "content": "电子邮件标题：{0}"
        },
        {
          "key": "Mail_Info_Content",
          "content": "电子邮件正文：{0}"
        },
        {
          "key": "Mail_Flag_Read",
          "content": "标记邮件状态已读成功：{0}"
        },
        {
          "key": "Mail_Flag_UnRead",
          "content": "标记邮件状态未读成功：{0}"
        },
        {
          "key": "Mail_Flag_Reply",
          "content": "标记邮件状态已回复成功：{0}"
        },
        {
          "key": "Mail_Flag_Flag",
          "content": "标记邮件状态旗标成功：{0}"
        },
        {
          "key": "Mail_Flag_UnFlag",
          "content": "标记邮件状态取消旗标成功：{0}"
        },
        {
          "key": "Mail_Flag_Delete",
          "content": "标记邮件状态删除成功：{0}"
        },
        {
          "key": "Mail_Recovery",
          "content": "恢复已删除邮件UID：{0} 成功：{1}"
        },
        {
          "key": "Mail_Drop",
          "content": "彻底删除邮件UID：{0} 成功：{1}"
        },
        {
          "key": "Inbox_Count",
          "content": "收件箱邮件数：{0}"
        },
        {
          "key": "Spam_Count",
          "content": "垃圾邮件数：{0}"
        },
        {
          "key": "Drafts_Count",
          "content": "草稿箱邮件数：{0}"
        },
        {
          "key": "Sent_Count",
          "content": "已发送邮件数：{0}"
        },
        {
          "key": "Trash",
          "content": "已删除邮件数：{0}"
        },
        {
          "key": "OTP_Random_Key",
          "content": "生成的随机密钥：{0}"
        },
        {
          "key": "OTP_Random_Key_Length",
          "content": "生成的长度为：{0} 的随机密钥：{1}"
        },
        {
          "key": "Generate_Result_HOTP",
          "content": "生成的HOTP随机码：{0}，使用算法：{1}"
        },
        {
          "key": "Generate_Result_TOTP",
          "content": "生成的TOTP随机码：{0}，使用算法：{1}"
        },
        {
          "key": "Generate_Result_Fix_Time",
          "content": "计算的时钟偏移：{0}，随机码：{1}"
        },
        {
          "key": "Generate_Result_TOTP_Fix_Time",
          "content": "生成的TOTP随机码：{0}，使用算法：{1}，时钟偏移：{2}"
        },
        {
          "key": "Generate_Result_TOTP_Config",
          "content": "生成的TOTP随机码：{0}，使用算法：{1}，时钟偏移：{2}，时间步长：{3}"
        },
        {
          "key": "Crypto_Key_Length",
          "content": "{0}密钥：{1}"
        },
        {
          "key": "Encrypt_Result",
          "content": "{0}/{1}/{2}加密结果：{3}"
        },
        {
          "key": "Decrypt_Result",
          "content": "{0}/{1}/{2}解密结果：{3}"
        },
        {
          "key": "Certificate_Result",
          "content": "{0}证书数据：{1}"
        },
        {
          "key": "Signature_Result",
          "content": "随机字符串：{0} 使用{1}签名结果：{2}"
        },
        {
          "key": "Verify_Result",
          "content": "{0}签名验证结果：{1}"
        },
        {
          "key": "SM2_Encrypt_Result",
          "content": "SM2加密结果：{0}，数据格式：{1}"
        },
        {
          "key": "SM2_Decrypt_Result",
          "content": "SM2解密结果：{0}，数据格式：{1}"
        },
        {
          "key": "CRC_Result",
          "content": "CRC算法：{0}，结果：{1}"
        },
        {
          "key": "Digits_Result",
          "content": "摘要算法：{0}，结果：{1}，{2}"
        },
        {
          "key": "Hmac_Result",
          "content": "摘要算法：{0}，密钥：{1}，结果：{2}，{3}"
        },
        {
          "key": "XML_Validate",
          "content": "XML数据验证结果：{0}"
        },
        {
          "key": "Secure_Config",
          "content": "解析的配置信息：{0}"
        },
        {
          "key": "Secure_Init_System_Result",
          "content": "系统配置初始化成功：{0}"
        },
        {
          "key": "Secure_Init_Config_Result",
          "content": "安全配置初始化成功：{0}"
        },
        {
          "key": "Secure_Remove_Result",
          "content": "安全配置移除成功：{0}"
        },
        {
          "key": "Secure_Encrypt_Result",
          "content": "安全配置加密结果：{0}"
        },
        {
          "key": "Secure_Decrypt_Result",
          "content": "安全配置解密结果：{0}"
        },
        {
          "key": "Secure_Register_Status",
          "content": "安全配置注册状态：{0}"
        },
        {
          "key": "Bean_Generate_Result",
          "content": "生成{0}结果：{1}"
        },
        {
          "key": "Bean_Copy_Result",
          "content": "复制的{0}结果：{1}"
        },
        {
          "key": "Bean_Result",
          "content": "{0}结果：{1}"
        },
        {
          "key": "Certificate_Sign",
          "content": "签名使用的私钥信息，Exponent：{0}， Modulus：{1}"
        },
        {
          "key": "Certificate_Base64",
          "content": "生成的证书信息，使用Base64编码：{0}"
        },
        {
          "key": "Certificate_Read",
          "content": "读取的证书信息，使用Base64编码：{0}"
        },
        {
          "key": "Certificate_Read_Private",
          "content": "读取的私钥信息，使用Base64编码：{0}"
        },
        {
          "key": "Certificate_Verify",
          "content": "证书签名验证成功：{0}"
        },
        {
          "key": "Certificate_Read_Private_PKCS12_Error",
          "content": "从PKCS12格式的文件中读取私钥出错"
        },
        {
          "key": "Certificate_Read_x509_PKCS12_Error",
          "content": "从PKCS12格式的文件中读取x509证书出错"
        },
        {
          "key": "Certificate_Read_Private_File_Error",
          "content": "从文件中读取私钥出错"
        },
        {
          "key": "Certificate_Read_PEM_Private",
          "content": "从PEM文件中读取的私钥信息，使用Base64编码：{0}"
        },
        {
          "key": "Certificate_Read_PEM_Certificate",
          "content": "从PEM文件中读取的证书信息，使用Base64编码：{0}"
        },
        {
          "key": "Certificate_Read_PEM_Private_Error",
          "content": "从PEM文件中读取私钥出错"
        },
        {
          "key": "Certificate_Read_PEM_Certificate_Error",
          "content": "从PEM文件中读取证书出错"
        },
        {
          "key": "Raw_Data_Bytes",
          "content": "二进制数据：{0}"
        },
        {
          "key": "Request_HTTP_Method",
          "content": "HTTP请求类型：{0}"
        },
        {
          "key": "Request_Resolve_Domain",
          "content": "解析域名：{0}，IP地址：{1}"
        },
        {
          "key": "Request_Read_Certificate",
          "content": "读取域名：{0}的服务器证书信息，使用Base64编码：{1}"
        },
        {
          "key": "Request_Content_Length",
          "content": "响应信息长度：{0}"
        },
        {
          "key": "Request_Content_Info",
          "content": "响应信息长度：{0}，内容：{1}"
        },
        {
          "key": "SNMP_Init_Result",
          "content": "初始化成功：{0}"
        },
        {
          "key": "SNMP_Add_Result",
          "content": "添加监控主机成功：{0}"
        },
        {
          "key": "SNMP_Record_Data",
          "content": "唯一识别代码：{0}，当前时间：{1}"
        },
        {
          "key": "SNMP_Record_Info",
          "content": "数据Key：{0}，数据值：{1}"
        },
        {
          "key": "System_Info",
          "content": "操作系统：{0}，版本号：{1}，用户名：{2}，用户目录：{3}，工作目录：{4}，唯一识别代码：{5}"
        },
        {
          "key": "System_Java_Info",
          "content": "Java版本：{0}，主版本号：{1}，Java路径：{2}，临时目录：{3}"
        },
        {
          "key": "System_Adaptor",
          "content": "适配器{0}的{1}地址："
        },
        {
          "key": "System_Adaptor_IP_Info",
          "content": "IP地址：{0}，保留地址：{1}，回环地址：{2}，链路本地地址：{3}"
        },
        {
          "key": "Desensitization_Data",
          "content": "脱敏后的数据：{0}"
        },
        {
          "key": "Sensitization_Value",
          "content": "隐藏的敏感数据：{0}"
        },
        {
          "key": "Office_Sheet_Exists",
          "content": "数据表：{0}，存在：{1}"
        },
        {
          "key": "Office_Excel_Rows_Count",
          "content": "数据表：{0}，记录数：{1}"
        }
      ]
    }
  ]
}